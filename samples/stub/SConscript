# Copyright (c) 2014, AllSeen Alliance. All rights reserved.
#
#    Permission to use, copy, modify, and/or distribute this software for any
#    purpose with or without fee is hereby granted, provided that the above
#    copyright notice and this permission notice appear in all copies.
#
#    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
#    WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
#    MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
#    ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
#    WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
#    ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
#    OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

Import('secenv')

app_env = secenv.Clone()
app_env.Append(CPPPATH = ['generated'])
app_env.Append(CPPPATH = ['../../../../../../../securitymgr/stub/inc'])
app_env.Append(LIBPATH = ['$SEC_DISTDIR/lib'])
app_env.Prepend(LIBS = ['alljoyn', 'stub', 'ajsecmgr', 'ajsecstorage'])

#Bundled router
if app_env['BR'] == 'on':
    app_env.Append(LIBPATH = ['$DISTDIR' + '/cpp/lib'])
    brobj = app_env['brobj'];
    app_env.Prepend(LIBS = [brobj, 'ajrouter'])

# build app
securitystub = app_env.Program(target='securitystub',
                           source=['main.cc'])

Return('securitystub')
