# Copyright AllSeen Alliance. All rights reserved.
#
#    Permission to use, copy, modify, and/or distribute this software for any
#    purpose with or without fee is hereby granted, provided that the above
#    copyright notice and this permission notice appear in all copies.
#
#    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
#    WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
#    MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
#    ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
#    WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
#    ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
#    OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

Import('secenv')
if secenv['OS_GROUP'] == 'windows':
    Import('sqlite_objs')

lib_env = secenv.Clone()

srcs = Glob('*.cc')
if secenv['OS_GROUP'] == 'windows':
    srcs.append(Glob('./external/sqlite3/*.c'))

lib_env.Prepend(LIBS = ['dl', 'sqlite3'])

libs = []

# Header files
lib_env.Append(CPPPATH = ['.'])
lib_env.Append(CPPPATH = ['#storage/inc'])
lib_env.Append(CPPPATH = ['#agent/inc/'])
if secenv['OS_GROUP'] == 'windows':
    lib_env.Append(CPPPATH = ['#external/sqlite3'])

# Static library
objs = lib_env.Object(srcs)
if secenv['OS_GROUP'] == 'windows':
    objs.append(sqlite_objs[0])
libs.append(lib_env.StaticLibrary('ajsecstorage', objs))

# Shared library
if lib_env.get('LIBTYPE', 'static') != 'static':
    shobjs = lib_env.SharedObject(srcs)
    if secenv['OS_GROUP'] == 'windows':
        shobjs.append(sqlite_objs[1])
    libs.append(lib_env.SharedLibrary('ajsecstorage', shobjs))

Return ('libs')
